/*
 * –§—É–Ω–∫—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã –º–æ–∂–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é.
 *
 * –í–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ –≤—Ä–µ–º—è –≤—ã–∑–æ–≤–∞ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø
 * –∫–æ –≤—Å–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º (–æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏)
 * —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ (—Ç–æ–π –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –µ—ë –≤–µ—Ä–Ω—É–ª–∏),
 * —ç—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è ¬´–∑–∞–º—ã–∫–∞–Ω–∏–µ¬ª.
 */
const fnA = function (parameter) {
    const innerVariable = '–∑–Ω–∞—á–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ fnA';

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    const innerFunction = function () {
        console.log(parameter);
        console.log(innerVariable);
        console.log('–≠—Ç–æ –≤—ã–∑–æ–≤ innerFunction');
    };
    // –ó–∞–º—ã–∫–∞–Ω–∏–µ
    return innerFunction;
};

const fnB = fnA();

fnB();

console.log(fnB);

/*
 * –ü–æ–≤–∞—Ä—ë–Ω–æ–∫
 */
// !! –¢—É—Ç –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è –≤—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∏–º–µ–Ω–∞ –ø–æ–≤–∞—Ä–æ–≤
// const makeDish = function (sheffName, dish) {
//     console.log(`${sheffName} –≥–æ—Ç–æ–≤–∏—Ç ${dish}`);
// };

// makeDish('Mango', '–ø–∏—Ä–æ–∂–æ–∫');
// makeDish('Mango', '–æ–º–ª–µ—Ç');
// makeDish('Mango', '—á–∞–π');

// makeDish('Poly', '–∫–æ—Ç–ª–µ—Ç—ã');
// makeDish('Poly', '—Å—É–ø–∏–∫');
// makeDish('Poly', '–∫–æ—Ñ–µ');

// !! –ß—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ –∏–º–µ–Ω–µ–º –∏ —Ä–∞–∑–Ω—ã–º–∏ –±–ª—é–¥–∞–º–∏ —è –Ω–∞–ø–∏—Å–∞–ª —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –∑–∞–º—ã–∫–∞–µ—Ç—Å—è
const makeChief = function (name) {
    const innerVar = { Jeez: 'Oh my god!!!', number: 555 };
    const message = 'Yo!';
    // –û–¥–Ω—É —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–∑–≤—Ä–∞—â–∞—é –∏–∑ –¥—Ä—É–≥–æ–π –∏ –æ–Ω–∞ –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    const makeDish = function (dish) {
        console.log(message);
        console.log(innerVar);
        console.log(`${name} –≥–æ—Ç–æ–≤–∏—Ç ${dish}`);
    };

    return makeDish;
};

const mango = makeChief('Mango');
const poly = makeChief('Poly');

console.dir(mango); // –ü–æ–∫–∞–∂–µ—Ç closure –≤ –∫–æ–Ω—Å–æ–ª–µ

mango('–ø–∏—Ä–æ–∂–æ–∫');
mango('–æ–º–ª–µ—Ç');
mango('–∫–æ—Ç–ª–µ—Ç—ã');

poly('—á–∞–π');
poly('—Å—É–ø–∏–∫');
poly('–∫–æ—Ñ–µ');

/*
 * –û–∫—Ä—É–≥–ª—è—Ç–æ—Ä ü§∑‚Äç‚ôÇÔ∏è
 */
// !! –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ –∫–∞–∫–æ–µ —á–∏—Å–ª–æ –∏ —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ
// const floatingPoint = 3.456789;
// const someInt = Math.round(floatingPoint); // 3
// const withDecimals = Number(floatingPoint.toFixed(2)); // 3.46

// const rounder1 = function (number, places) {
//     return Number(number.toFixed(places));
// };

// console.log(rounder1(3.4567, 2)); // –ï—Å—Ç—å –≤—Ç–æ—Ä–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ –≤–∏–¥–µ 2 –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
// console.log(rounder1(3.4567, 3));
// console.log(rounder1(5.1234, 2));
// console.log(rounder1(3.4567, 3)); // –¢–æ–∂–µ —Å–∞–º–æ–µ, —Å 3

// !! –≠—Ç–æ –≤—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–∞–º—ã–∫–∞–Ω–∏–µ –∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Ç–æ–≥–æ —Å–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª –¥–æ–ª–∂–Ω–æ —Å—Ç–æ—è—Ç—å –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
const rounder2 = function (places) {
    return function (number) {
        return Number(number.toFixed(places));
    };
};

const rounder3 = rounder2(3); // –í —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω—É—é —è –≤–µ—Ä–Ω—É–ª —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ rounder2 –≤ –∑–∞–º—ã–∫–∞–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–π places === 3
const rounder4 = rounder2(4); // –í —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω—É—é —è –≤–µ—Ä–Ω—É–ª —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ rounder2 –≤ –∑–∞–º—ã–∫–∞–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–π places === 4

console.dir(rounder3); // –ü–æ–∫–∞–∂–µ—Ç closure –≤ –∫–æ–Ω—Å–æ–ª–µ
console.dir(rounder4);

console.log(rounder3(3.45678)); // –í—Ç–æ—Ä–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –Ω–µ—Ç, —Ç–æ –µ—Å—Ç—å —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π –∫–æ—Ç–æ—Ä–∞—è —É–∫–∞–∑—ã–≤–∞–ª–∞ –±—ã —Å–∫–æ–ª—å–∫–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–µ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
console.log(rounder4(3.4567));
console.log(rounder3(5.12345678));
console.log(rounder4(3.4567));

/*
 * –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ - —Å–∫—Ä—ã—Ç–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */
const salaryManagerFactory = function (employeeName, baseSalary = 0) {
    let salary = baseSalary; // –ü—Ä–∏–≤–∞—Ç–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è

    // –ú–µ—Ç–æ–¥—ã –∑–∞–º—ã–∫–∞–Ω–∏—è –≤ –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    return {
        raise(amount) {
            if (amount > 1000) {
                return '–¢—ã –æ–ø—è—Ç—å –≤—ã—Ö–æ–¥–∏—à—å —Å–≤—è–∑—å, –º—É–¥–∏–ª–∞?';
            }
            salary += amount;
        },

        lower(amount) {
            salary -= amount;
        },

        current() {
            return `–¢–µ–∫—É—â–∞—è –∑–∞—Ä–ø–∞–ª–∞—Ç–∞ ${employeeName} - ${salary}`;
        },
    };
};

const salaryManager = salaryManagerFactory('Mango', 5000);
console.log(salaryManager.current());

salaryManager.raise(1000);
console.log(salaryManager.current());

salaryManager.raise(2000000);
console.log(salaryManager.current());
