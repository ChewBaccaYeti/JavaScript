/*
 * Array.prototype.reduce()
 * - –ü–æ—ç–ª–µ–º–µ–Ω—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤
 * - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á—Ç–æ —É–≥–æ–¥–Ω–æ ü§Ø
 * - –ó–∞–º–µ–Ω—è–µ—Ç –≤—Å—ë –Ω–∞ —Å–≤–µ—Ç–µ, –Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω—É–∂–Ω–æ —Å —É–º–æ–º
 */

const numbersExplicit = [5, 10, 15, 20, 25];

const numbersImplicit = [6, 11, 16, 21, 26];

const totalExplicit = numbersExplicit.reduce((accumulator, number) => {
    console.log('number', number);
    console.log('accumulator', accumulator);

    return accumulator + number;
}, 0);

const totalImplicit = numbersImplicit.reduce((acc, number) => acc + number, 1);
console.log(totalImplicit);

//? accumulator = 0 -> number = 5 -> return 0 + 5
//* accumulator = 5 -> number = 10 -> return 5 + 10
//* accumulator = 15 -> number = 15 -> return 15 + 15
//* accumulator = 30 -> number = 20 -> return 30 + 20
//? accumulator = 50 -> number = 25 -> return 50 + 25

/*
 * –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é –∑–∞—Ä–ø–ª–∞—Ç—É
 */

const salary = {
    mango: 100,
    poly: 50,
    ajax: 150,
};

const totalSalaryExplicit = Object.values(salary).reduce(
    (accumulatorTotal, value) => {
        return accumulatorTotal + value;
    },
    0
);
console.log(totalSalaryExplicit);

const totalSalaryImplicit = Object.values(salary).reduce(
    (total, values) => total + values,
    1
);
console.log(totalSalaryImplicit);

/*
 * –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤
 */

const players = [
    { id: 'player-1', name: 'Mango', timePlayed: 310, online: false },
    { id: 'player-2', name: 'Poly', timePlayed: 470, online: true },
    { id: 'player-3', name: 'Kiwi', timePlayed: 230, online: true },
    { id: 'player-4', name: 'Ajax', timePlayed: 150, online: false },
    { id: 'player-5', name: 'Chelsey', timePlayed: 80, online: true },
];

const totalTimeExplicit = Object.values(players).reduce(
    (accumulatorTime, value) => {
        return accumulatorTime + value.timePlayed;
    },
    0
);
console.log(totalTimeExplicit);

const totalTimeImplicit = players.reduce(
    (acc, player) => acc + player.timePlayed,
    1
);
console.log(totalTimeImplicit);

/*
 * –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã
 */

const cart = [
    { label: 'Apples', price: 100, quantity: 2 },
    { label: 'Bananas', price: 120, quantity: 3 },
    { label: 'Lemons', price: 70, quantity: 4 },
];

const totalAmountExplicit = cart.reduce((acc, item) => {
    return acc + item.price * item.quantity;
}, 0);
console.log(totalAmountExplicit);

const totalAmountImplicit = cart.reduce(
    (total, { price, quantity }) => total + price * quantity,
    1
);
console.log(totalAmountImplicit);

/*
 * –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–µ–≥–∏ –∏–∑ —Ç–≤–∏—Ç–æ–≤
 */

const tweets = [
    { id: '000', likes: 5, tags: ['js', 'nodejs'] },
    { id: '001', likes: 2, tags: ['html', 'css'] },
    { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },
    { id: '003', likes: 8, tags: ['css', 'react'] },
    { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },
];

const allTagsMutable = tweets.reduce((allTags, tweet) => {
    allTags.push(...tweet.tags); //* –ï—Å–ª–∏ –ø–∏—Å–∞—Ç—å –±–µ–∑ ...spread —Ç–æ –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—à–∞—Ç—Å—è –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –¥—Ä—É–≥–∏–µ –º–∞—Å—Å–∏–≤—ã —Å —Ç–µ–≥–∞–º–∏ –∏–∑ tweets

    return allTags;
}, []);
//* –ú–∏–Ω—É—Å –¥–∞–Ω–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –≤ —Ç–æ–º —á—Ç–æ –æ–Ω –º—É—Ç–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç –º–∞—Å—Å–∏–≤–∞ tweets –∏ linter –±—É–¥–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –æ—à–∏–±–∫—É
console.table(allTagsMutable);

const allTagsImmutable = tweets.reduce((acc, tweet) => {
    return [...acc, ...tweet.tags];
}, []);
//* –î–∞–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª, –∞ —Ä–∞—Å–ø—ã–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç—ã –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∏–∑–º–µ–Ω—è–µ—Ç –∏—Ö
console.table(allTagsImmutable);

// acc = [], tweet.tags = ['js', 'nodejs'] return [...[], ...['js', 'nodejs']]
// acc = ['js', 'nodejs'] tweet.tags ['html', 'css']
// return  [...['js', 'nodejs'], ...['html', 'css']]
//  ['js', 'nodejs', 'html', 'css']

const allTagsFlatMap = tweets.flatMap((tweet) => tweet.tags);
console.table(allTagsFlatMap);
//* –ò—Å–ø–æ–ª—å–∑—É—è flatMap, –º—ã –ø–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ —Ç–µ–≥–æ–≤, –∏ –æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ "–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç" —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω–æ–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤, –∫–∞–∫ –∏ —Ä–∞–Ω–µ–µ —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º ...spread.

/*
 * –í–µ–¥—ë–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–≥–æ–≤
 */

const tagsStats = allTags.reduce((acc, tag) => {
    return {
        ...acc,
        [tag]: acc[tag] ? acc[tag] + 1 : 1,
    };
}, {});
// console.log(tagsStats);

//* –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ —Å –∫–ª—é—á–æ–º tag –µ—Å—Ç—å. —É–≤–µ–ª–∏—á–∏—Ç—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 1
//* –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ—Å—Ç–≤–∞ –Ω–µ—Ç —Å —Ç–∞–∫–∏–º –∫–ª—é—á–æ–º —á—Ç–æ –≤ tag, —Å–¥–µ–ª–∞—Ç—å –∏ –∑–∞–ø–∏—Å–∞—Ç—å 1
