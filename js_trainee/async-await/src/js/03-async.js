// –°–∏–Ω—Ç–∞–∫—Å–∏—Å async/await
// –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
// –ü–∞—Ä–∞–ª–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å Promise.all()
// try...catch

function getFruit(name) {
    const fruits = {
        strawberry: 'üçì',
        kiwi: 'ü•ù ',
        apple: 'üçé',
    };

return new Promise((resolve, reject) =>
        setTimeout(() => resolve(fruits[name]), 500),
    );
}

async function aMakeSmoothie() {
    try {
        console.time('aMakeSmoothie');
        const apple = getFruit('apple');
        const kiwi = getFruit('kiwi');
        const berry = getFruit('strawberry');

        const fruits = await Promise.all([apple, kiwi, berry]);
        console.log(fruits);
        console.timeEnd('aMakeSmoothie');

    return fruits;
    } catch (error) {
    console.log('–û—à–∏–±–∫–∞');
    }
}

aMakeSmoothie();

async function fn () {} // –§—É–Ω–∫—Ü–∏—è

const fn = async function () {} // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ

const arr = async () => {} // –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è

const x = {
async getname () {} // –ú–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞
}

class X {
async getName () {} // –ú–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞
}